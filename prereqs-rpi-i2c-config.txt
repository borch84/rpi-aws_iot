Prerequisites for Raspberry Pi I2C Configuration

If you are using Raspian Linux 3.18 or later, you need to go into the Raspberry Pi config utility and enable I2C.

sudo raspi-config

Select 8 Advanced Options and then  A7 I2C – Enable/Disable automatic loading. A prompt will appear asking Would you like the ARM I2C interface to be enabled?, select Yes, exit the utility. Reboot your Raspberry Pi followed by the steps below to install the prerequisite software and drivers.

Step 1: Reboot the Raspberry Pi using following command

sudo reboot

Step 2: Next you need to update your Raspberry Pi to ensure all the latest packages are installed:

sudo apt-get update
sudo apt-get upgrade
sudo apt-get dist-upgrade

Step 3:  Once you have logged into your Raspberry Pi from the command line, run the following command to install SMBus and Python Dev:

sudo apt-get install python-smbus python3-smbus python-dev python3-dev

Step 4:  From the command line, run the following command to install i2c-tools:

sudo apt-get install i2c-tools

 

Step 5 (For previous releases of Raspian Linux 3.18 you need to complete this step or skip over to step 6): Enable I2C and SPI protocols. I2C and SPI protocols are turned off in the wheezy distro by default, so you will need to enable them by editing the file /etc/modprobe.d/raspi-blacklist.conf :

sudo nano /etc/modprobe.d/raspi-blacklist.conf

In the file you will see two lines, you need to disable the blacklisting of these by adding a # character before each line:

#blacklist spi-bcm2708
#blacklist i2c-bcm2708

Save your changes and exit the nano editor.

Step 6: For recent versions of the Raspberry Pi (3.18 kernel or later) you will need to update the /boot/config.txt file.  Open the file with nano using the command:

sudo nano /boot/config.txt

Add the following text to the bottom of the file:

dtparam=i2c1=on

dtparam=i2c_arm=on

Save your changes and exit the nano editor.

Step 7: Set the Raspberry Pi to start I2C automatically at boot by editing /etc/modules :

sudo nano /etc/modules

Use your cursor keys to move to the last line and add a new line and then add:

i2c-dev

Save your changes and exit the nano editor.

Step 8: To avoid having to run the I2C tools at root, add the ‘pi’ user to the I2C group:

sudo adduser pi i2c

Step 9: Next reboot the Raspberry Pi:

sudo reboot

When your Raspberry Pi has rebooted you will have the I2C and SMBus Python 2 or 3 support. To follow more on SMBus functions, check this link.

https://radiostud.io/howto-i2c-communication-rpi/
