# Edit this file to introduce tasks to be run by cron.
# 
# Each task to run has to be defined through a single line
# indicating with different fields when the task will be run
# and what command to run for the task
# 
# To define the time you can provide concrete values for
# minute (m), hour (h), day of month (dom), month (mon),
# and day of week (dow) or use '*' in these fields (for 'any').
# 
# Notice that tasks will be started based on the cron's system
# daemon's notion of time and timezones.
# 
# Output of the crontab jobs (including errors) is sent through
# email to the user the crontab file belongs to (unless redirected).
# 
# For example, you can run a backup of all your user accounts
# at 5 a.m every week with:
# 0 5 * * 1 tar -zcf /var/backups/home.tgz /home/
# 
# For more information see the manual pages of crontab(5) and cron(8)
# 
# m h  dom mon dow   command
*/2 * * * * /home/pi/rpi-aws_iot/ec100.py -sp 4 -pp 17  -maxec 900 -fp /home/pi/rpi-aws_iot/ec100.json -pt /home/pi/rpi-aws_iot/purge_time.json 
*/2 * * * * /home/pi/rpi-aws_iot/rpi-cpu-core-temp.sh > /home/pi/aws_iot/rpi-cpu-core-temp.log
* * * * * /home/pi/rpi-aws_iot/aws-ec-thing-shadow-watchdog.sh
* * * * * /home/pi/rpi-aws_iot/watchdog-nextion-serial-cediquim.sh
@daily find /home/pi/aws_iot/ -name "*log" -ctime +1 -exec rm {} \;
*/5 * * * * /home/pi/aws_iot/fs_usage.sh
